@page "/users/delete/{id}"
@attribute [Authorize(Roles = "Admin, Gestor")]
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using GestaoLojaTP.Data
@rendermode InteractiveServer
@inject ApplicationDbContext DbContext
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager


<PageTitle>Apagar Utilizador</PageTitle>

<h1>Apagar Utilizador</h1>

@if (user == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <div class="center">
        <h3>Tem a certeza que quer apagar o utilizador @user.UserName?</h3>
        <div class="mt-3">
            <button class="btn btn-danger" @onclick="HandleDelete">Apagar</button>
            <a href="/utilizadores" class="btn btn-secondary">Cancelar</a>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private ApplicationUser? user;

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            user = await UserManager.FindByIdAsync(Id);
        }

        if (user == null)
        {
            NavigationManager.NavigateTo("/users");
            return;
        }

    }

    private async Task HandleDelete()
    {
        if (user != null)
        {
            var result = await UserManager.DeleteAsync(user);
            if (result.Succeeded)
            {
                NavigationManager.NavigateTo("/users");
            }
            else
            {
                foreach (var error in result.Errors)
                {
                    Console.WriteLine(error.Description);
                }

            }

        }
    }
}